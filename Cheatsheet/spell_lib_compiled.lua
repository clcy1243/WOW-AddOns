local name, SPELLDB = ...

SPELLDB.compiled = {}


------------------------------------------------------------------------------------------------------------------
-- Compile database out of all available SpellIDs
-------------------------------------------------------------------------------------------------------------------

local function alreadyListed(table, element)
  for _, value in pairs(table) do
    if value == element then
      return true
    end
  end
  return false
end

local function mergeTable(t1, t2)
   	for _,v in ipairs(t2) do
		if (not alreadyListed(t1, v)) then
			table.insert(t1, v)
		end
   end 
   return t1
end

local compileThese = {
	SPELLDB.MAGE.ARCANE.spells,
	SPELLDB.MAGE.FROST.spells,
	SPELLDB.MAGE.FIRE.spells,
	SPELLDB.MAGE.ARCANE.talents,
	SPELLDB.MAGE.FROST.talents,
	SPELLDB.MAGE.FIRE.talents,
	SPELLDB.MAGE.ARCANE.pvpTalents,
	SPELLDB.MAGE.FROST.pvpTalents,
	SPELLDB.MAGE.FIRE.pvpTalents,
	SPELLDB.MAGE.ARCANE.artifact,
	SPELLDB.MAGE.FROST.artifact,
	SPELLDB.MAGE.FIRE.artifact,

	SPELLDB.DEMONHUNTER.VENGEANCE.spells,
	SPELLDB.DEMONHUNTER.HAVOC.spells,
	SPELLDB.DEMONHUNTER.VENGEANCE.talents,
	SPELLDB.DEMONHUNTER.HAVOC.talents,
	SPELLDB.DEMONHUNTER.VENGEANCE.pvpTalents,
	SPELLDB.DEMONHUNTER.HAVOC.pvpTalents,
	SPELLDB.DEMONHUNTER.VENGEANCE.artifact,
	SPELLDB.DEMONHUNTER.HAVOC.artifact,

	SPELLDB.DEATHKNIGHT.BLOOD.spells,
	SPELLDB.DEATHKNIGHT.FROST.spells,
	SPELLDB.DEATHKNIGHT.UNHOLY.spells,
	SPELLDB.DEATHKNIGHT.BLOOD.talents,
	SPELLDB.DEATHKNIGHT.FROST.talents,
	SPELLDB.DEATHKNIGHT.UNHOLY.talents,
	SPELLDB.DEATHKNIGHT.BLOOD.pvpTalents,
	SPELLDB.DEATHKNIGHT.FROST.pvpTalents,
	SPELLDB.DEATHKNIGHT.UNHOLY.pvpTalents,
	SPELLDB.DEATHKNIGHT.BLOOD.artifact,
	SPELLDB.DEATHKNIGHT.FROST.artifact,
	SPELLDB.DEATHKNIGHT.UNHOLY.artifact,

	SPELLDB.DRUID.BALANCE.spells,
	SPELLDB.DRUID.FERAL.spells,
	SPELLDB.DRUID.GUARDIAN.spells,
	SPELLDB.DRUID.RESTORATION.spells,
	SPELLDB.DRUID.BALANCE.talents,
	SPELLDB.DRUID.FERAL.talents,
	SPELLDB.DRUID.GUARDIAN.talents,
	SPELLDB.DRUID.RESTORATION.talents,
	SPELLDB.DRUID.BALANCE.pvpTalents,
	SPELLDB.DRUID.FERAL.pvpTalents,
	SPELLDB.DRUID.GUARDIAN.pvpTalents,
	SPELLDB.DRUID.RESTORATION.pvpTalents,
	SPELLDB.DRUID.BALANCE.artifact,
	SPELLDB.DRUID.FERAL.artifact,
	SPELLDB.DRUID.GUARDIAN.artifact,
	SPELLDB.DRUID.RESTORATION.artifact,

	SPELLDB.HUNTER.BEASTMASTERY.spells,
	SPELLDB.HUNTER.MARKSMANSHIP.spells,
	SPELLDB.HUNTER.SURVIVAL.spells,
	SPELLDB.HUNTER.BEASTMASTERY.talents,
	SPELLDB.HUNTER.MARKSMANSHIP.talents,
	SPELLDB.HUNTER.SURVIVAL.talents,
	SPELLDB.HUNTER.BEASTMASTERY.pvpTalents,
	SPELLDB.HUNTER.MARKSMANSHIP.pvpTalents,
	SPELLDB.HUNTER.SURVIVAL.pvpTalents,
	SPELLDB.HUNTER.BEASTMASTERY.artifact,
	SPELLDB.HUNTER.MARKSMANSHIP.artifact,
	SPELLDB.HUNTER.SURVIVAL.artifact,

	SPELLDB.MONK.BREWMASTER.spells,
	SPELLDB.MONK.WINDWALKER.spells,
	SPELLDB.MONK.MISTWEAVER.spells,
	SPELLDB.MONK.BREWMASTER.talents,
	SPELLDB.MONK.WINDWALKER.talents,
	SPELLDB.MONK.MISTWEAVER.talents,
	SPELLDB.MONK.BREWMASTER.pvpTalents,
	SPELLDB.MONK.WINDWALKER.pvpTalents,
	SPELLDB.MONK.MISTWEAVER.pvpTalents,
	SPELLDB.MONK.BREWMASTER.artifact,
	SPELLDB.MONK.WINDWALKER.artifact,
	SPELLDB.MONK.MISTWEAVER.artifact,

	SPELLDB.PALADIN.HOLY.spells,
	SPELLDB.PALADIN.PROTECTION.spells,
	SPELLDB.PALADIN.RETRIBUTION.spells,
	SPELLDB.PALADIN.HOLY.talents,
	SPELLDB.PALADIN.PROTECTION.talents,
	SPELLDB.PALADIN.RETRIBUTION.talents,
	SPELLDB.PALADIN.HOLY.pvpTalents,
	SPELLDB.PALADIN.PROTECTION.pvpTalents,
	SPELLDB.PALADIN.RETRIBUTION.pvpTalents,
	SPELLDB.PALADIN.HOLY.artifact,
	SPELLDB.PALADIN.PROTECTION.artifact,
	SPELLDB.PALADIN.RETRIBUTION.artifact,

	SPELLDB.PRIEST.DISCIPLINE.spells,
	SPELLDB.PRIEST.HOLY.spells,
	SPELLDB.PRIEST.SHADOW.spells,
	SPELLDB.PRIEST.DISCIPLINE.talents,
	SPELLDB.PRIEST.HOLY.talents,
	SPELLDB.PRIEST.SHADOW.talents,
	SPELLDB.PRIEST.DISCIPLINE.pvpTalents,
	SPELLDB.PRIEST.HOLY.pvpTalents,
	SPELLDB.PRIEST.SHADOW.pvpTalents,
	SPELLDB.PRIEST.DISCIPLINE.artifact,
	SPELLDB.PRIEST.HOLY.artifact,
	SPELLDB.PRIEST.SHADOW.artifact,

	SPELLDB.ROGUE.ASSASSINATION.spells,
	SPELLDB.ROGUE.OUTLAW.spells,
	SPELLDB.ROGUE.SUBTLETY.spells,
	SPELLDB.ROGUE.ASSASSINATION.talents,
	SPELLDB.ROGUE.OUTLAW.talents,
	SPELLDB.ROGUE.SUBTLETY.talents,
	SPELLDB.ROGUE.ASSASSINATION.pvpTalents,
	SPELLDB.ROGUE.OUTLAW.pvpTalents,
	SPELLDB.ROGUE.SUBTLETY.pvpTalents,
	SPELLDB.ROGUE.ASSASSINATION.artifact,
	SPELLDB.ROGUE.OUTLAW.artifact,
	SPELLDB.ROGUE.SUBTLETY.artifact,

	SPELLDB.SHAMAN.ELEMENTAL.spells,
	SPELLDB.SHAMAN.ENHANCEMENT.spells,
	SPELLDB.SHAMAN.RESTORATION.spells,
	SPELLDB.SHAMAN.ELEMENTAL.talents,
	SPELLDB.SHAMAN.ENHANCEMENT.talents,
	SPELLDB.SHAMAN.RESTORATION.talents,
	SPELLDB.SHAMAN.ELEMENTAL.pvpTalents,
	SPELLDB.SHAMAN.ENHANCEMENT.pvpTalents,
	SPELLDB.SHAMAN.RESTORATION.pvpTalents,
	SPELLDB.SHAMAN.ELEMENTAL.artifact,
	SPELLDB.SHAMAN.ENHANCEMENT.artifact,
	SPELLDB.SHAMAN.RESTORATION.artifact,

	SPELLDB.WARLOCK.AFFLICTION.spells,
	SPELLDB.WARLOCK.DEMONOLOGY.spells,
	SPELLDB.WARLOCK.DESTRUCTION.spells,
	SPELLDB.WARLOCK.AFFLICTION.talents,
	SPELLDB.WARLOCK.DEMONOLOGY.talents,
	SPELLDB.WARLOCK.DESTRUCTION.talents,
	SPELLDB.WARLOCK.AFFLICTION.pvpTalents,
	SPELLDB.WARLOCK.DEMONOLOGY.pvpTalents,
	SPELLDB.WARLOCK.DESTRUCTION.pvpTalents,
	SPELLDB.WARLOCK.AFFLICTION.artifact,
	SPELLDB.WARLOCK.DEMONOLOGY.artifact,
	SPELLDB.WARLOCK.DESTRUCTION.artifact,

	SPELLDB.WARRIOR.ARMS.spells,
	SPELLDB.WARRIOR.FURY.spells,
	SPELLDB.WARRIOR.PROTECTION.spells,
	SPELLDB.WARRIOR.ARMS.talents,
	SPELLDB.WARRIOR.FURY.talents,
	SPELLDB.WARRIOR.PROTECTION.talents,
	SPELLDB.WARRIOR.ARMS.pvpTalents,
	SPELLDB.WARRIOR.FURY.pvpTalents,
	SPELLDB.WARRIOR.PROTECTION.pvpTalents,
	SPELLDB.WARRIOR.ARMS.artifact,
	SPELLDB.WARRIOR.FURY.artifact,
	SPELLDB.WARRIOR.PROTECTION.artifact,
}

for k,v in pairs(compileThese) do
	mergeTable(SPELLDB.compiled,v)
end

