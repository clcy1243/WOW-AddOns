--喜欢原始底部按钮的,这些改成false就可local useCustomStyle = true--HACKUpdateMicroButtonsParent = function(parent) end    local locale = GetLocale()--自定義菜單 (BLIZ保護機制,inherits表示原按鈕)local menus = {    { zhTW = "角色", zhCN = "角色", text = "Player", inherits = CharacterMicroButton },    { zhTW = "法術", zhCN = "法术", text = "Spell", inherits = SpellbookMicroButton },    { zhTW = "天賦", zhCN = "天赋", text = "Talent", inherits = TalentMicroButton },    { zhTW = "成就", zhCN = "成就", text = "Achi", inherits = AchievementMicroButton },    { zhTW = "任務", zhCN = "任务", text = "Quest", inherits = QuestLogMicroButton },    { zhTW = "公會", zhCN = "公会", text = "Guild", inherits = GuildMicroButton },    { zhTW = "找團", zhCN = "找团", text = "LFD", inherits = LFDMicroButton, r=0, g=1, b=0.82 },    { zhTW = "收藏", zhCN = "收藏", text = "Collects", inherits = CollectionsMicroButton },    { zhTW = "指南", zhCN = "指南", text = "Guide", inherits = EJMicroButton },    { zhTW = "商城", zhCN = "商城", text = "Shop", inherits = StoreMicroButton },    { zhTW = "背包", zhCN = "背包", text = "Bag", func = ToggleAllBags },    --{ zhTW = "幫助", zhCN = "帮助", text = "Help", inherits = HelpMicroButton },    --{ zhTW = "菜單", zhCN = "菜单", text = "Menu", inherits = MainMenuMicroButton },}if (not useCustomStyle) then menus = {} end--按钮宽度local buttonWidth = 36--按鈕字體大小local buttonFontSize = locale:sub(1,2) == "zh" and 12 or 9--按鈕點擊local function click(self)    if (self.func) then self.func(self) endend--創建按鈕local function CreateButton(prefix, index, config)    local button    if (config.inherits) then        button = CreateFrame("Frame", prefix..index, _G["MenuMainFrame"] or UIParent)        button:SetHeight(20)        button:SetWidth(config.width or buttonWidth)        config.inherits:SetParent(button)        config.inherits:ClearAllPoints()        config.inherits:SetHitRectInsets(0,0,0,0)        config.inherits:SetWidth(button:GetWidth())        config.inherits:SetHeight(button:GetHeight())        config.inherits:SetPoint("CENTER")        config.inherits:SetAlpha(0)        hooksecurefunc(config.inherits, "Enable", function(self) self:SetAlpha(0) end)    else        button = CreateFrame("Button", prefix..index, _G["MenuMainFrame"] or UIParent)        button:SetHeight(20)        button:SetWidth(config.width or buttonWidth)        button.func = config.func        button:SetHighlightTexture("Interface\\Buttons\\UI-Common-MouseHilight", "ADD")        button:RegisterForClicks("LeftButtonUp")        button:SetScript("OnClick", click)    end    button:SetBackdrop({        bgFile = "Interface\\Tooltips\\UI-Tooltip-Background",        edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 8, edgeSize = 8,        insets = { left = 2, right = 2, top = 2, bottom = 2 }    })    button:SetBackdropColor(0, 0, 0, 0.3)    button:SetBackdropBorderColor(1, 0.8, 0.2, 0.4)    if (index == 1) then        button:SetPoint("LEFT", _G["MenuMainFrame"] or UIParent, "LEFT", 0, 0)    else        button:SetPoint("LEFT", _G[prefix..(index-1)], "RIGHT", 1, 0)    end    button.text = button:CreateFontString(nil, "ARTWORK")    button.text:SetWidth(button:GetWidth())    button.text:SetFont(UNIT_NAME_FONT, buttonFontSize, "THINOUTLINE")    if (config.r and config.g and config.b) then        button.text:SetTextColor(config.r, config.g, config.b)    else        button.text:SetTextColor(1, 0.82, 0)    end    button.text:SetPoint("CENTER", button, "CENTER", 1, 0)    button.text:SetJustifyH("CENTER")    button.text:SetText(config[locale] or config.text)    return buttonenddo    --創建菜單框架    local MenuMainFrame = CreateFrame("Frame", "MenuMainFrame", UIParent)    MenuMainFrame:SetSize(#menus*(buttonWidth+1), 20)    MenuMainFrame:SetPoint("CENTER", UIParent, "CENTER", -12, 12)    for i, v in ipairs(menus) do CreateButton("MenuMainFrameButton", i, v) end    --創建菜單控制按鈕    local MenuMainButton = CreateFrame("Button", "MenuMainButton", UIParent)    MenuMainButton:SetWidth(18)    MenuMainButton:SetHeight(18)    MenuMainButton:SetBackdrop({        bgFile = "Interface\\Tooltips\\UI-Tooltip-Background",        edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 8, edgeSize = 8,        insets = { left = 2, right = 2, top = 2, bottom = 2 }    })    MenuMainButton:SetBackdropColor(0, 0, 0, 0.8)    MenuMainButton:SetBackdropBorderColor(1, 1, 1, 0.9)    MenuMainButton:SetHighlightTexture("Interface\\Buttons\\UI-Common-MouseHilight", "ADD")    MenuMainButton:SetPoint("TOP", UIParent, "TOP", #menus*buttonWidth/2+20, -2)    MenuMainButton:SetMovable(true)    MenuMainButton:SetClampedToScreen(true)    MenuMainButton:SetFrameStrata("HIGH")    MenuMainButton:RegisterForDrag("LeftButton", "RightButton")    MenuMainButton:RegisterForClicks("LeftButtonUp", "RightButtonUp")    MenuMainButton:SetScript("OnDragStart", function(self) self:StartMoving() end)    MenuMainButton:SetScript("OnDragStop", function(self) self:StopMovingOrSizing() end)    MenuMainButton:SetScript("OnClick", function() ToggleFrame(MenuMainFrame) end)    MenuMainButton:SetScript("OnLeave", function() GameTooltip:Hide() end)    MenuMainButton:SetScript("OnEnter", function(self)        local _, _, latencyHome, latencyWorld = GetNetStats()        GameTooltip:SetOwner(self, "ANCHOR_RIGHT")        GameTooltip:ClearLines()        GameTooltip:AddLine(format(MAINMENUBAR_LATENCY_LABEL, latencyHome, latencyWorld))        local totalMem, addons, mem = 0, {}, 0        UpdateAddOnMemoryUsage()        for i = 1, GetNumAddOns() do            mem = GetAddOnMemoryUsage(i)            totalMem = totalMem + mem            addons[i] = { name = GetAddOnInfo(i), mem = mem }        end        if (totalMem > 0) then            GameTooltip:AddLine(" ")            if (totalMem > 1000) then                GameTooltip:AddLine(format(TOTAL_MEM_MB_ABBR, totalMem/1000))            else                GameTooltip:AddLine(format(TOTAL_MEM_KB_ABBR, totalMem))            end            for _, v in pairs(addons) do                if (v.mem > 1000) then                    GameTooltip:AddLine(format(ADDON_MEM_MB_ABBR, v.mem/1000, v.name),1,1,1)                elseif (v.mem > 0) then                    GameTooltip:AddLine(format(ADDON_MEM_KB_ABBR, v.mem, v.name),1,1,1)                end            end        end        GameTooltip:Show()    end)    MenuMainButton:SetScript("OnUpdate", function(self, elapsed)        self.timer = (self.timer or 0) + elapsed        if (self.timer > 5) then            local _, _, latencyHome, latencyWorld = GetNetStats()            if (latencyHome < 100 and latencyWorld < 100) then                self:SetBackdropColor(0, 1, 0, 0.2)                self.icon:SetVertexColor(0, 1, 0)            elseif (latencyHome < 600 and latencyWorld < 600) then                self:SetBackdropColor(0.8, 0.6, 0.2, 0.2)                self.icon:SetVertexColor(0.8, 0.6, 0.2)            else                self:SetBackdropColor(1, 0, 0, 0.2)                self.icon:SetVertexColor(1, 0, 0)            end            self.timer = 0        end    end)    MenuMainButton.icon = MenuMainButton:CreateTexture(nil, "ARTWORK")	MenuMainButton.icon:SetTexture("Interface\\Buttons\\UI-OptionsButton")	MenuMainButton.icon:SetWidth(10)	MenuMainButton.icon:SetHeight(10)	MenuMainButton.icon:SetPoint("CENTER")    if (#menus == 0) then MenuMainButton:Hide() end    --重設位置    MenuMainFrame:ClearAllPoints()    MenuMainFrame:SetParent(MenuMainButton)    MenuMainFrame:SetPoint("TOPRIGHT", MenuMainButton, "TOPLEFT", -2, 0)end--隱藏原始素材和處理技能欄do    local HideFrame = CreateFrame("Frame", "MenuMainHideFrame", UIParent)    HideFrame:Hide()    HideFrame:RegisterEvent("PLAYER_LOGIN")    HideFrame:SetScript("OnEvent", function(self, event, ...)        self:UnregisterEvent("PLAYER_LOGIN")        --材質和縮放        MainMenuBar:SetScale(0.85)        for _, bar in pairs({ArtifactWatchBar,HonorWatchBar,ReputationWatchBar}) do            bar:SetWidth(512)            bar.StatusBar:SetWidth(512)            for i = 0, 3 do                bar.StatusBar["WatchBarTexture"..i]:SetWidth(128)                bar.StatusBar["XPBarTexture"..i]:SetWidth(128)            end        end        ActionBarUpButton:Hide()            --技能上翻按鈕        ActionBarDownButton:Hide()          --技能下翻按鈕        MainMenuBarTexture2:Hide()          --主菜單背景        MainMenuBarTexture3:Hide()          --背包背景        MainMenuBarPageNumber:Hide()        --技能頁碼數字        MainMenuMaxLevelBar0:Hide()         --經驗條底紋最左邊        MainMenuMaxLevelBar3:Hide()         --經驗條底紋最右邊        MainMenuBar:SetWidth(512)           --主框架        MainMenuExpBar_SetWidth(512)        --經驗條        MainMenuBarMaxLevelBar:SetWidth(512)--經驗條底紋        MainMenuBarTexture0:SetPoint("BOTTOM", MainMenuBarArtFrame, -128, 0)    --主技能條背景        MainMenuBarTexture1:SetPoint("BOTTOM", MainMenuBarArtFrame, 128, 0)     --主技能條按鈕背景        MainMenuBarLeftEndCap:SetPoint("BOTTOM", MainMenuBarArtFrame, -289, 0)  --左邊獅子        MainMenuBarRightEndCap:SetPoint("BOTTOM", MainMenuBarArtFrame, 289, 0)  --右邊獅子        --右下动作条        MultiBarBottomRight:HookScript("OnShow", function(self)            self:ClearAllPoints()            self:SetPoint("BOTTOM", MultiBarBottomLeft, "TOP", 0, 2)            MainMenuBar:SetHeight(91)            MainMenuExpBar:SetPoint("TOP", 0, -38)            MainMenuBarMaxLevelBar:SetPoint("TOP", 0, -49)            MainMenuBar_UpdateExperienceBars()            PetActionButton1:SetPoint("BOTTOMLEFT", 36, 40)        end)        MultiBarBottomRight:HookScript("OnHide", function(self)            MainMenuBar:SetHeight(53)            MainMenuExpBar:SetPoint("TOP")            MainMenuBarMaxLevelBar:SetPoint("TOP", 0, -11)            MainMenuBar_UpdateExperienceBars()            PetActionButton1:SetPoint("BOTTOMLEFT", 36, 2)        end)        hooksecurefunc("MainMenuTrackingBar_Configure", function(frame, isOnTop)            if (MultiBarBottomRight:IsShown()) then                local r, t, p, x, y = frame:GetPoint()                frame:ClearAllPoints()                frame:SetPoint(r, t, p, x, y-38)            end        end)        --要塞按鈕小一點        if (GarrisonLandingPageMinimapButton) then GarrisonLandingPageMinimapButton:SetScale(0.6) end    end)end--处理MicroMenu和背包按钮do    local HideFrame, button    HideFrame = CreateFrame("Frame", "MenuMainMicroHideFrame", UIParent)    HideFrame:SetSize(1, 24)    local index = 0    for _, buttonName in pairs(MICRO_BUTTONS) do        button = _G[buttonName]        if (button:GetParent():GetName() == "MainMenuBarArtFrame") then            button:SetParent(HideFrame)            button:ClearAllPoints()            button:SetSize(28, 58)            if (buttonName == "HelpMicroButton") then                button:Hide()            else                button:SetPoint("TOPLEFT", HideFrame, "TOPLEFT", index*28, 28)                button.x = index*28                button.y = 28                index = index + 1            end            if (useCustomStyle) then button:Hide() end        end    end    for i, slot in ipairs({CharacterBag3Slot,CharacterBag2Slot,CharacterBag1Slot,CharacterBag0Slot,MainMenuBarBackpackButton}) do        slot:SetParent(HideFrame)        slot:ClearAllPoints()        slot:SetPoint("LEFT", HideFrame, "LEFT", index*28 + (i-1)*30 + 4, 0)    end    local width = UIParent:GetWidth() * UIParent:GetScale() / 2 - 320    local scale = min(0.92, width / (index*28+160))    HideFrame:SetScale(scale)    HideFrame:SetPoint("BOTTOM", UIParent, "BOTTOM", 320/scale, 8)    --替換系統的位置移動    hooksecurefunc("MoveMicroButtons", function(anchor, anchorTo, relAnchor, x, y, isStacked)        local button        for _, buttonName in pairs(MICRO_BUTTONS) do            button = _G[buttonName]            if (button.x and button.y) then                button:SetPoint("TOPLEFT", button:GetParent(), "TOPLEFT", button.x, button.y)            elseif (useCustomStyle and buttonName == "CharacterMicroButton") then                button:ClearAllPoints()                button:SetPoint("CENTER", button:GetParent(), "CENTER")            end        end    end)    --啓用自定義按鈕的,則隱藏這個框架    if (useCustomStyle) then        HideFrame:Hide()        for _, alert in ipairs(MAIN_MENU_MICRO_ALERT_PRIORITY) do            _G[alert]:HookScript("OnShow", function(self) self:SetAlpha(0) end)        end    endend